{"title":"初级树状数组模板","uid":"dca54ffcfa4d0e9b8b3aa6f8ea44af7a","slug":"树状数组模板","date":"2022-04-28T13:07:35.000Z","updated":"2022-06-04T06:35:35.147Z","comments":true,"path":"api/articles/树状数组模板.json","keywords":null,"cover":null,"content":"<h1 id=\"初级树状数组模板\">初级树状数组模板</h1>\r\n<h4 id=\"以区间和为例\">以区间和为例</h4>\r\n<p><strong>代码如下~</strong></p>\r\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">int lowbit(int a)\n&#x2F;&#x2F;玄学的运算\n&#123;\n\treturn a &amp; (-a);\n    &#x2F;&#x2F;公式记住\n&#125;\nvoid add(int k, vector&lt;int&gt; &amp;tr, int i)\n&#x2F;&#x2F;单点增加\n&#123;\n\tint n &#x3D; tr.size();\n\tfor(int p &#x3D; i; p &lt;&#x3D; n; p +&#x3D; lowbit(p))\n\t\ttr[p] +&#x3D; k;\n    &#x2F;&#x2F;每次到左上层，加入k\n\treturn;\n&#125;\nint ask(int i, vector&lt;int&gt;&amp; tr)\n&#x2F;&#x2F;求前缀和\n&#123;\n\tint ans &#x3D; 0;\n\tfor(int p &#x3D; i; p; p -&#x3D; lowbit(p))\n\t\tans +&#x3D; tr[p];\n    &#x2F;&#x2F;每次到左下层\n\treturn ans;\n&#125;\nint find(int l, int r, vector&lt;int&gt; &amp;tr)\n&#x2F;&#x2F;求区间和\n&#123;\n\treturn ask(r, tr) - ask(l - 1, tr);\n&#125;\nvoid build(vector&lt;int&gt; &amp;tr, vector&lt;int&gt; a)\n&#x2F;&#x2F;建树\n&#123;\n\tint n &#x3D; a.size();\n\ttr.resize(5 * n, 0);\n\tfor(int i &#x3D; 1; i &lt;&#x3D; n; i++)\n\t\tadd(a[i], tr, i);\n&#125;</code></pre>\r\n<hr />\r\n<h2 id=\"建树\">建树</h2>\r\n<p>只要对 <strong>每一个数据</strong> 进行 <strong>单点修改</strong>\r\n即可<br />\r\n建好以后是这个样子：</p>\r\n<p><img src=\"https://s1.328888.xyz/2022/04/30/AWi8m.jpg\"\r\nalt=\"BIT1\" /></p>\r\n<h2 id=\"单点修改\">单点修改</h2>\r\n<p><strong>如图：</strong></p>\r\n<p><img src=\"https://s1.328888.xyz/2022/04/30/AWXBP.jpg\"\r\nalt=\"BIT2\" /></p>\r\n<h2 id=\"求前缀和\">求前缀和</h2>\r\n<p><strong>如图：</strong></p>\r\n<p><img src=\"https://s1.328888.xyz/2022/04/30/AWL3q.jpg\"\r\nalt=\"BIT3\" /></p>\r\n<hr />\r\n<p><strong>The End!</strong></p>\r\n","text":"初级树状数组模板 以区间和为例 代码如下~ int lowbit(int a) &#x2F;&#x2F;玄学的运算 &#123; return a &amp; (-a); &#x2F;&#x2F;公式记住 &#125; void add(int k, vector&lt;int&...","link":"","photos":[],"count_time":{"symbolsCount":927,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Code","slug":"Code","count":8,"path":"api/tags/Code.json"},{"name":"Data-Struct","slug":"Data-Struct","count":1,"path":"api/tags/Data-Struct.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9D%E7%BA%A7%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">初级树状数组模板</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E5%8C%BA%E9%97%B4%E5%92%8C%E4%B8%BA%E4%BE%8B\"><span class=\"toc-text\">以区间和为例</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E6%A0%91\"><span class=\"toc-text\">建树</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%82%B9%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">单点修改</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B1%82%E5%89%8D%E7%BC%80%E5%92%8C\"><span class=\"toc-text\">求前缀和</span></a></li></ol></li></ol>","author":{"name":"YingHN","slug":"blog-author","avatar":"https://s2.loli.net/2022/12/24/vS8KdpjE9WVInX2.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"微信抢红包调查报告","uid":"b7a05a9fe53f598334cfcb9273c0d23f","slug":"微信抢红包调查报告","date":"2022-04-29T11:26:44.000Z","updated":"2022-04-30T03:48:40.768Z","comments":true,"path":"api/articles/微信抢红包调查报告.json","keywords":null,"cover":null,"text":"关于微信抢红包的调查报告 前言： 春节临近，由于微信的广泛使用及响应“疫情期间不出门，不聚集”的号召，在微信上抢红包已成常态，想必大家都希望抢到更大的红包，这里就分析一下个人数据，以及如何抢到大红包。 正文： 【数据收集】 · 据微信官方数据， 微信红包额度在0.01 ~ 剩余人...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Entertainmen","slug":"Entertainmen","count":1,"path":"api/tags/Entertainmen.json"}],"author":{"name":"YingHN","slug":"blog-author","avatar":"https://s2.loli.net/2022/12/24/vS8KdpjE9WVInX2.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"KMP模板","uid":"57210e696457a5dab93391574b39f7ca","slug":"KMP模板","date":"2022-04-17T04:43:16.000Z","updated":"2022-06-04T06:33:52.697Z","comments":true,"path":"api/articles/KMP模板.json","keywords":null,"cover":[],"text":"KMP模板 代码如下~ int KMP(string T, string P) &#123; int m &#x3D; P.size(); int n &#x3D; T.size(); &#x2F;&#x2F;P表示匹配串，长度为 m，T表示原串，长度为n。 &#x2F;&#x2...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Code","slug":"Code","count":8,"path":"api/tags/Code.json"},{"name":"String","slug":"String","count":1,"path":"api/tags/String.json"}],"author":{"name":"YingHN","slug":"blog-author","avatar":"https://s2.loli.net/2022/12/24/vS8KdpjE9WVInX2.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}