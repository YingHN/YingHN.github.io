{"title":"OI刷题之道","uid":"5d67ee9613450b17e879008db1b1a32d","slug":"OI刷题之道","date":"2023-01-31T12:23:57.000Z","updated":"2023-01-31T12:30:38.962Z","comments":true,"path":"api/articles/OI刷题之道.json","keywords":null,"cover":null,"content":"<h1 id=\"切题四件套\">切题四件套</h1>\r\n<p>我个人认为也可以叫<code>解题四大法则</code>:</p>\r\n<ul>\r\n<li>理解题目(Clarification)\r\n<ul>\r\n<li>在 LeetCode 看题后, 先思考, 认真确认和理解题目;</li>\r\n<li>避免忽略了一些条件或者是误解题目;</li>\r\n<li>面试的时候更加应该跟面试官确认清楚题目, 条件, 场景等;</li>\r\n</ul></li>\r\n<li>多种解题方案(Possible solutions)\r\n<ul>\r\n<li>对比时间和空间复杂度 compare (time/spaace)</li>\r\n<li>最优解 optimal (加强)</li>\r\n</ul></li>\r\n<li>多编写(Coding)\r\n<ul>\r\n<li>代码反复练习和编写;</li>\r\n<li>每一种解法都反复练习和编写;</li>\r\n</ul></li>\r\n<li>多测试案例(Test cases)\r\n<ul>\r\n<li>在 LeetCode 上可以改变测试案例;</li>\r\n<li>多测试几种案例, 确保自己的代码可以适应各种特殊情况;</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"刷题方式五毒神掌\">刷题方式(五毒神掌)</h2>\r\n<h3 id=\"一\">一</h3>\r\n<ul>\r\n<li>5 分钟: 读题 + 思考;</li>\r\n<li>5 分钟过后, 没有思路就直接看解法;</li>\r\n<li>记录多个解题方法, 比较解题方法的优弊;</li>\r\n<li>尝试默写代码, 训练刻意手写代码;</li>\r\n</ul>\r\n<h3 id=\"二\">二</h3>\r\n<ul>\r\n<li>自己编写, 这时候就不要再看题解了;</li>\r\n<li>LeetCode 提交代码, 确保能通过;</li>\r\n<li>有 Bug 没有关系, 重复 debug 到通过为止;</li>\r\n<li>编写出多种解题方法;</li>\r\n<li>持续优化 - 重点是 <code>执行时间</code> (可参考 LeetCode\r\n中打败了多少的人, 也可以点击比较优秀的人, 学习更好的写法);</li>\r\n</ul>\r\n<h3 id=\"三\">三</h3>\r\n<ul>\r\n<li>过了一天后, 再重复做题;</li>\r\n<li>根据自己不熟悉的题目与程度做专项练习;</li>\r\n<li>专项练习就是针对自己不熟悉的种类的题, 从而刻意练习哪一种题;</li>\r\n</ul>\r\n<h3 id=\"四\">四</h3>\r\n<ul>\r\n<li>过了一周后, 再反复练习;</li>\r\n</ul>\r\n<h3 id=\"五\">五</h3>\r\n<ul>\r\n<li>赛前重复练习.</li>\r\n</ul>\r\n<hr>\r\n<p><a href=\"https://tridiamond.tech/post/algorithm%2Falgorithm-intro\">转载自</a></p>\r\n","text":"切题四件套 我个人认为也可以叫解题四大法则: 理解题目(Clarification) 在 LeetCode 看题后, 先思考, 认真确认和理解题目; 避免忽略了一些条件或者是误解题目; 面试的时候更加应该跟面试官确认清楚题目, 条件, 场景等; 多种解题方案(Possible s...","link":"","photos":[],"count_time":{"symbolsCount":715,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Code","slug":"Code","count":8,"path":"api/tags/Code.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%87%E9%A2%98%E5%9B%9B%E4%BB%B6%E5%A5%97\"><span class=\"toc-text\">切题四件套</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F%E4%BA%94%E6%AF%92%E7%A5%9E%E6%8E%8C\"><span class=\"toc-text\">刷题方式(五毒神掌)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80\"><span class=\"toc-text\">一</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C\"><span class=\"toc-text\">二</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89\"><span class=\"toc-text\">三</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B\"><span class=\"toc-text\">四</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94\"><span class=\"toc-text\">五</span></a></li></ol></li></ol></li></ol>","author":{"name":"YingHN","slug":"blog-author","avatar":"https://s2.loli.net/2022/12/24/vS8KdpjE9WVInX2.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"二叉堆模板","uid":"fdb3deac27eca391f3bea9b5599f90c4","slug":"二叉堆模板","date":"2023-02-11T11:51:32.000Z","updated":"2023-02-11T11:52:00.327Z","comments":true,"path":"api/articles/二叉堆模板.json","keywords":null,"cover":null,"text":"二叉堆模板 #include &lt;bits/stdc++.h&gt; using namespace std; class Heap // the biggest one is at the top of the heap { public: vector&lt;int&gt...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"YingHN","slug":"blog-author","avatar":"https://s2.loli.net/2022/12/24/vS8KdpjE9WVInX2.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"手机编程解放双手-AutoJS教程","uid":"79043696e87fab8b1cf3ed8f65a300ff","slug":"手机编程解放双手-AutoJS教程","date":"2023-01-19T00:43:24.000Z","updated":"2023-01-19T11:26:56.103Z","comments":true,"path":"api/articles/手机编程解放双手-AutoJS教程.json","keywords":null,"cover":[],"text":"手机编程解放双手-AutoJS教程 Auto.js是一个JavaScript的扩展, 能实现无root操作手机. 快速开始 下载手机app; 破解版软件4.1.0(不要点更新), 破解版打包器(视需求下载); 付费版官网(PRO); 给权限; 下载VSCode扩展Auto.js-...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"YingHN","slug":"blog-author","avatar":"https://s2.loli.net/2022/12/24/vS8KdpjE9WVInX2.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}